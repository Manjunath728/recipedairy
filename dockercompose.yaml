version: "3"
services:
  service-registry:
    image: manjunath728/cnf-service-registry
    container_name: service-registry
    environment:
      - spring.application.name=service-registry
      - server.port=8761
      - eureka.instance.hostname=localhost
      - eureka.client.fetch-registry=false
      - eureka.client.register-with-eureka=false
    networks:
      - spring-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761"]
      interval: 3s
      timeout: 10s
      retries: 30
      start_period: 10s
  api-gateway:
    image: manjunath728/cnf-apigateway
    container_name: api-gateway
    environment:
      - spring.application.name=api-gateway
      - server.port=8765
      - eureka.client.fetch-registry=true
      - eureka.instance.ip-address=true
      - eureka.client.register-with-eureka=true
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka
      - spring.cloud.gateway.discovery.locator.enabled=true
      - spring.cloud.gateway.routes[0].id=RECIPE-SERVICE
      - spring.cloud.gateway.routes[0].uri=lb://RECIPE-SERVICE
      - spring.cloud.gateway.routes[0].predicates[0]=Path=/recipe/**
      - spring.cloud.gateway.routes[1].id=USER-SERVICE
      - spring.cloud.gateway.routes[1].uri=lb://USER-SERVICE
      - spring.cloud.gateway.routes[1].predicates[0]=Path=/user/**
    networks:
      - spring-network
    ports:
      - 8765:8765
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/actuator/health"]
      interval: 3s
      timeout: 10s
      retries: 30
      start_period: 10s
    depends_on:
      service-registry:
        condition: service_healthy
  recipe-service:
    image: manjunath728/cnf-recipe-ms
    container_name: recipe-service
    environment:
      - spring.application.name=recipe-service
      - spring.datasource.url=jdbc:mysql://sqldb1:3306/recipedb
      - spring.datasource.username=root
      - spring.datasource.password=admin
      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.show-sql=true
      - server.port=8090
      - eureka.client.fetch-registry=true
      - eureka.instance.ip-address=true
      - eureka.client.register-with-eureka=true
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka
    networks:
      - spring-network
    depends_on:
      sqldb1:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api-gateway:8765/recipe/"]
      interval: 3s
      timeout: 10s
      retries: 50
      start_period: 10s
  user-service:
    image: manjunath728/cnf-user-ms
    container_name: user-service
    environment:
      - spring.application.name=user-service
      - spring.datasource.url=jdbc:mysql://sqldb2:3306/userdb
      - spring.datasource.username=root
      - spring.datasource.password=admin
      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.show-sql=true
      - server.port=8091
      - eureka.client.fetch-registry=true
      - eureka.instance.ip-address=true
      - eureka.client.register-with-eureka=true
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka
    networks:
      - spring-network
    depends_on:
      sqldb2:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api-gateway:8765/user/"]
      interval: 3s
      timeout: 10s
      retries: 50
      start_period: 10s
  sqldb1:
    image: mysql:latest
    container_name: sqldb1
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: recipedb
    networks:
      - spring-network
    depends_on:
      - service-registry
    healthcheck:
      test: ["CMD", "mysqladmin", "-uroot", "-padmin", "ping", "-h", "localhost", "--silent"]
      interval: 3s
      timeout: 10s
      retries: 30
      start_period: 10s
  sqldb2:
    image: mysql:latest
    container_name: sqldb2
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: userdb
    networks:
      - spring-network
    depends_on:
      - sqldb1
      - service-registry
    healthcheck:
      test: ["CMD", "mysqladmin", "-uroot", "-padmin", "ping", "-h", "localhost", "--silent"]
      interval: 3s
      retries: 30
      timeout: 10s
      start_period: 10s
  finisher:
    container_name: wait-for-completion
    image: alpine
    depends_on:
      recipe-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
    networks:
      - spring-network
networks:
  spring-network:
    driver: bridge

